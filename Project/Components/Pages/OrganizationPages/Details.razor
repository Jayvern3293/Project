@page "/organizations/details"
@using Microsoft.EntityFrameworkCore
@using Project.Domain
@inject IDbContextFactory<Project.Data.ProjectContext> DbFactory
@inject NavigationManager NavigationManager

        


<PageTitle>Details</PageTitle>

<h1>Details</h1>

<div>
    <h2>Organization</h2>
    <hr />
    @if (organization is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Name</dt>
            <dd class="col-sm-10">@organization.Name</dd>
            <dt class="col-sm-2">Address</dt>
            <dd class="col-sm-10">@organization.Address</dd>
        </dl>
        <div>
            <AuthorizeView Roles="Administrator">
            <a href="@($"/organizations/edit?organizationid={organization.OrganizationId}")">Edit</a> 
            </AuthorizeView>
            <a href="@($"/organizations")">Back to List</a>
        </div>
    }
</div>

@code {
    private Organization? organization;

    [SupplyParameterFromQuery]
    private int OrganizationId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        organization = await context.Organization.FirstOrDefaultAsync(m => m.OrganizationId == OrganizationId);

        if (organization is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
