@page "/pets/create"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.EntityFrameworkCore
@using Project.Domain
@inject IDbContextFactory<Project.Data.ProjectContext> DbFactory
@inject NavigationManager NavigationManager

@attribute [Authorize(Roles = "Administrator")]
<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h2>Pet</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="Pet" OnValidSubmit="AddPet" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert"/>
            <div class="mb-3">
                <label for="name" class="form-label">Name:</label> 
                <InputText id="name" @bind-Value="Pet.Name" class="form-control" /> 
                <ValidationMessage For="() => Pet.Name" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="age" class="form-label">Age:</label> 
                <InputNumber id="age" @bind-Value="Pet.Age" class="form-control" /> 
                <ValidationMessage For="() => Pet.Age" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="species" class="form-label">Species:</label> 
                <InputText id="species" @bind-Value="Pet.Species" class="form-control" /> 
                <ValidationMessage For="() => Pet.Species" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="colour" class="form-label">Colour:</label> 
                <InputText id="colour" @bind-Value="Pet.Colour" class="form-control" /> 
                <ValidationMessage For="() => Pet.Colour" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="gender" class="form-label">Gender:</label> 
                <InputText id="gender" @bind-Value="Pet.Gender" class="form-control" /> 
                <ValidationMessage For="() => Pet.Gender" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="organizationid" class="form-label">OrganizationId:</label> 
                <InputNumber id="organizationid" @bind-Value="Pet.OrganizationId" class="form-control" /> 
                <ValidationMessage For="() => Pet.OrganizationId" class="text-danger" /> 
            </div>        
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/pets">Back to List</a>
</div>

@code {
    [SupplyParameterFromForm]
    private Pet Pet { get; set; } = new();

    // To protect from overposting attacks, see https://learn.microsoft.com/aspnet/core/blazor/forms/#mitigate-overposting-attacks.
    private async Task AddPet()
    {
        using var context = DbFactory.CreateDbContext();
        context.Pet.Add(Pet);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/pets");
    }
}
